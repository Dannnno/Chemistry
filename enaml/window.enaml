from enaml.layout.api import vbox
from enaml.widgets.api import (
    MainWindow, ToolBar, DockPane, MenuBar, Menu, Action, ActionGroup,
    StatusBar, StatusItem, Container, Html, PushButton, Label, ComboBox, Field
)
import enaml
from elementvalid import ElementValidator


def loadFile(filename):
    """This allows you to use images as buttons
    Requires you to have them in *.png format, takes
    the path of them as a string input"""
    
    with open(filename, 'rb') as f:
        data = f.read()
        image = enaml.image.Image(data=data)
        return enaml.icon.Icon(images = [enaml.icon.IconImage(image=image)])
    
enamldef MyMenuBar(MenuBar):
    Menu:
        title = '&File'
        Action:
            text = 'New File\tCtrl+N'
            triggered :: print 'New File triggered'
        Action:
            text = 'Open File\tCtrl+O'
            triggered :: print 'Open File triggered'
        Action:
            text = 'Open Folder...'
            triggered :: print 'Open Folder triggered'
    Menu:
        title = '&Edit'
        Action:
            text = 'Undo\tCtrl+Z'
            triggered :: print 'Undo triggered'
        Action:
            text = 'Redo\tCtrl+R'
            triggered :: print 'Redo triggered'
        Menu:
            title = 'Undo Selection'
            Action:
                text = 'Undo Insert\tCtrl+U'
                triggered :: print 'Undo Insert triggered'
            Action:
                text = 'Redo Insert\tCtrl+Shift+U'
                enabled = False
                triggered :: print 'Redo Insert triggered'
        Action:
            separator = True
        Action:
            text = 'Cut\tCtrl+X'
            triggered :: print "Cut triggered"
        Action:
            text = 'Copy\tCtrl+C'
            triggered :: print 'Copy triggered'
        Action:
            text = 'Paste\tCtrl+V'
            triggered :: print 'Paste triggered'


enamldef MyStatusBar(StatusBar):
    StatusItem:
        Label:
            text = "Status"


enamldef MyToolBar(ToolBar):
    Field:
        max_length = 3
        validator = ElementValidator()
        text = validator(input)
#        print validator(text)
#        if validator(text) == text:
#            status_tip = 'Yes'
        #index = 6
        #status_tip = str(items[index]) + " Is selected"
    ActionGroup:
        Action:
            separator = True        
        Action:
            checkable = True
            text = 'Add Element'
            # How you would add an image to a button
            #icon = loadFile('C://Users/Dan/Documents/GitHub/Chemistry/enaml/hi.png')
            status_tip = "Lets you add an Element to the canvas"
            triggered :: 
                print text
                method = 1
        Action:
            checkable = True
            text = 'Add Bond'
            status_tip = "Lets you add a Bond to the canvas"
            triggered :: 
                print text
                method = 2
        Action:
            checkable = True
            text = 'Add Charge'
            status_tip = "Lets you add charge to the canvas"
            triggered :: 
                print text
                method = 3
        Action:
            checkable = True
            text = 'Add Radical'
            status_tip = "Lets you add a radical to the canvas"
            triggered ::    
                print text
                method = 4
        Action:
            separator = True
        Action:
            checkable = True
            text = 'Change Element'
            status_tip = "Lets you change an element"
            triggered :: 
                print text
                method = 5
        Action:
            checkable = True
            text = 'Increase Bond'
            status_tip = "Lets you increase a Bond"
            triggered :: 
                print text
                method = 6
        Action:
            checkable = True
            text = 'Decrease Bond'
            status_tip = "Lets you decrease a Bond"
            triggered :: 
                print text
                method = 7
        Action:
            checkable = True
            text = 'Increase Charge'
            status_tip = "Lets you increase a charge"
            triggered :: 
                print text
                method = 8
        Action:
            checkable = True
            text = 'Decrease Charge'
            status_tip = "Lets you decrease a charge"
            triggered :: 
                print text
                method = 9
        Action:
            checkable = True
            text = 'Remove Radical'
            status_tip = "Lets you remove a radical"
            triggered :: 
                print text
                method = 10
        Action:
            separator = True
        Action:
            checkable = True
            text = 'Finish Molecule'
            triggered :: 
                print text
                method = 11
        Action:
            checkable = True
            text = 'Publish Molecule'
            triggered :: 
                print text
                method = 12
        
enamldef Main(MainWindow):
    MyMenuBar:
        pass
    MyStatusBar:
        pass
    MyToolBar:
        pass
    Container:
        constraints = [vbox(html, spacing=0)]
        Html: html:
            source = '<h1><center>Hello World!</center></h1>'