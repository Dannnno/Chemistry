Path specs:

    I need to have an easy and (hopefully) efficient way of path finding and
    matching in a compound such that I can find patterns necessary for
    determining how something reacts.  This should use iterators, generators,
    memoization and other time/cpu saving tactics as much as possible

    Linear paths:
        Linear paths are what they sound like - a straight path where we don't
        care about other substituents.  For example, the compound
        
          H H
          | |
        H-C-C-H
          | |
          H H
          
        Has a linear path H-C-H (in many different ways).  We don't care if 
        it is actually 'linear' or at an angle
        
                                        H   H
                        H-C-H            \ /
                                          C
                                          
        If only the order of the elements is specified then that is all that
        is checked.  The bonds can also be supplied (order, chirality, etc)
        and only bond paths that match that will be accepted.  If a given bond 
        doesn't matter, it should be represented as None
          
    Branched paths:
        Branched paths are paths where we do care about intermediate substituents.
        For example
        
          H H
          | |
        H-C-C-H
          | |
          H H                 H
                              |
        has a branched path H-C-C (in 4 different ways).        
        
    Ring paths:
        Ring paths are cycles.  They can either be branched (substituents at 
        specific locations) or linear (no substituents/irrelevant substituents)
        
                C               C-O-H
               / \             / \
              C---C           C---C
                        
              linear       Could be both, depending on what I care about
              
        They should consider rotational symmetry
        
    Really weird stuff:
        Bridged rings
        